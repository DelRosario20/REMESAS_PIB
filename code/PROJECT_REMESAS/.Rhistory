ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
# Graficar cada variable individualmente
plot_series_with_shading(data, "log_CONSUMO", "Consumo (log)")
plot_series_with_shading(data, "log_REMESAS", "Remesas (log)")
plot_series_with_shading(data, "log_PIB", "PIB (log)")
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_PIB)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# Linea de tiempo para las REMESAS
ggplot(data = datos, aes(x = TIEMPO, y = log_REMESAS)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución de las remesas",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "brown", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "yellow", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
# LINEA DE TIEMPO ---------------------------------------------------------
{
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
}# Gráfico para el Connsumo
# Data --------------------------------------------------------------------
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
# LINEA DE TIEMPO ---------------------------------------------------------
{
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
}# Gráfico para el Connsumo
View(datos)
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Consumo",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_PIB)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del PIB",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# Linea de tiempo para las REMESAS
ggplot(data = datos, aes(x = TIEMPO, y = log_REMESAS)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución de las remesas",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "yellow", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
# Cargar librerías necesarias
library(knitr)
library(kableExtra)
# Definir los datos de la tabla
data <- data.frame(
Variable = c("Remesas", "Consumo Ajustado", "log_INGRESO_PER_CAPITA", "log(consumo_ajustado)", "log_GASTO_PUBLICO","log_INVERSION", "log_EXPORTA_NETAS" , "Constante"),
`Consumo Ajustado` = c("0.209***", "-0.015", "1.068***","", "", "", "", "5.576***"),
`Error Consumo Ajustado` = c("(0.034)", "(0.011)", "(0.114)","", "", "", "", "(1.077)"),
PIB = c("", "", "", "0.725***", "0.291***", "0.004", "0.001*", "0.504"),
`Error PIB` = c("", "", "", "(0.038)", "(0.024)", "(0.008)", "(0.0004)", "(0.406)")
)
# Crear la tabla con kable y aplicar formato
kbl(data, align = "c", col.names = c("Variable", "Consumo Ajustado", "(Error Estándar)", "PIB", "(Error Estándar)")) %>%
kable_classic(full_width = F) %>%
add_header_above(c(" " = 1, "Dependent variable" = 4)) %>%
add_header_above(c("Resultado de las regresiones de dos etapas" = 5)) %>%
add_footnote(c("Observaciones: 13",
"R²: 0.950 (Consumo Ajustado), 0.998 (PIB)",
"R² Ajustado: 0.933	 (Consumo Ajustado), 0.997 (PIB)",
"Error Estándar Residual: 0.024 (df = 9), 0.006 (df = 8)",
"Estadístico F: 56.649*** (df = 3; 9), 940.193*** (df = 4; 8)",
"Nota: *p<0.1; **p<0.05; ***p<0.01"))
print(
kbl(data, align = "c", col.names = c("Variable", "Consumo Ajustado", "(Error Estándar)", "PIB", "(Error Estándar)")) %>%
kable_classic(full_width = F) %>%
add_header_above(c(" " = 1, "Dependent variable" = 4)) %>%
add_header_above(c("Resultado de las regresiones de dos etapas" = 5)) %>%
add_footnote(c("Observaciones: 13",
"R²: 0.950 (Consumo Ajustado), 0.998 (PIB)",
"R² Ajustado: 0.933	 (Consumo Ajustado), 0.997 (PIB)",
"Error Estándar Residual: 0.024 (df = 9), 0.006 (df = 8)",
"Estadístico F: 56.649*** (df = 3; 9), 940.193*** (df = 4; 8)",
"Nota: *p<0.1; **p<0.05; ***p<0.01"))
)
## Resultados de las regresiones
```{r Resultado de las regresiones, echo=FALSE, message=TRUE, warning=TRUE, paged.print=TRUE}
print(table_result)
# Data --------------------------------------------------------------------
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIADO.xlsx")
# Limpieza de datos
datos$TIEMPO <- as.Date(datos$TIEMPO)
View(datos)
View(datos)
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIADO.xlsx")
# Limpieza de datos
datos$TIEMPO <- as.Date(paste0(datos$TIEMPO, "-01-01"))
View(datos)
# Tratamiento para variable de exportaciones netas
datos$EXPORTA_NETAS <- datos$EXPORTACIONES-datos$IMPORTACIONES
min_exporta_neta <- min(datos$EXPORTA_NETAS)
shift_value <- abs(min_exporta_neta) + 1  # Añadir 1 para evitar log(0)
# Tratamiento para variable de inflación
min_inflacion <- min(datos$INFLACION)
shift_valueinf <- abs(min_inflacion) + 1  # Añadir 1 para evitar log(0)
# Transformar las variables de consumo y remesas a logaritmo
datos$log_CONSUMO <- log(datos$CONSUMO)
datos$log_REMESAS <- log(datos$REMESAS)
datos$log_PIB <- log(datos$PIB)
datos$log_GASTO_PUBLICO <- log(datos$GASTO_PUBLICO)
datos$log_INVERSION <- log(datos$INVERSION)
datos$log_EXPORTA_NETAS <- log(datos$EXPORTA_NETAS + shift_value)
datos$log_INFLACION <- log(datos$INFLACION+ shift_valueinf)
datos$log_INGRESO_PER_CAPITA <- log(datos$INGRESO_PER_CAPITA)
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(log_CONSUMO ~ log_REMESAS + log_INFLACION + log_INGRESO_PER_CAPITA , data = datos)
# Extraer los valores ajustados (consumo estimado a partir de remesas)
datos$consumo_ajustado <- exp(modelo_etapa1$fitted.values)
modelo_indice_pib <- lm(log_PIB ~ log(consumo_ajustado) + log_GASTO_PUBLICO + log_INVERSION + log_EXPORTA_NETAS, data = datos)
# Ver los resultados del modelo final
summary(modelo_etapa1)
summary(modelo_indice_pib)
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Consumo", y = "PIB")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las Consumo ajustado por remesas en el PIB", x = "Consumo ajustado", y = "PIB")
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.html")  # Cambiar extensión según formato
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(log_CONSUMO ~ log_REMESAS + log_INFLACION + log_INGRESO_PER_CAPITA , data = datos)
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(log_CONSUMO ~ log_REMESAS + log_INFLACION + log_INGRESO_PER_CAPITA , data = datos)
modelo_etapa1 <- lm(log_CONSUMO ~ log_REMESAS + log_INFLACION + log_INGRESO_PER_CAPITA , data = datos)
summary(modelo_etapa1)
# Extraer los valores ajustados (consumo estimado a partir de remesas)
datos$consumo_ajustado <- exp(modelo_etapa1$fitted.values)
View(modelo_etapa1)
View(datos)
View(datos)
modelo_indice_pib <- lm(log_PIB ~ log(consumo_ajustado) + log_GASTO_PUBLICO + log_INVERSION + log_EXPORTA_NETAS, data = datos)
# Ver los resultados del modelo final
summary(modelo_etapa1)
summary(modelo_indice_pib)
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("", ""),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("log_REMESAS", "log_INFLACION"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("log_REMESAS", "log_INFLACION"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# Crear tabla para los modelos y exportarla a Word
tab_model(modelo_etapa1, modelo_indice_pib,
title = "Resultados de las Regresiones",
dv.labels = c("Consumo", "PIB"),
show.ci = FALSE,
show.se = TRUE,  # Muestra errores estándar
file = "resultados_regresion2.doc")  # Exporta a Word
# Data --------------------------------------------------------------------
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "yellow", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#8B7500", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#EEEE00", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#458B00", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#EEC900", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#8B7500", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#8B7500", "CONSUMO" = "red"),
name = "Variable")
# Data --------------------------------------------------------------------
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "#8B7500", "CONSUMO" = "red"),
name = "Variable")
