labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = data, aes(x=AÑOS, y=GASTO_PUBLICO))
View(data)
ggplot(data = datos, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIA.xlsx")
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = data, aes(x=TIEMPO, y=GASTO_PUBLICO))
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
ggplot(data = datos, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = data, aes(x=TIEMPO, y=GASTO_PUBLICO))
ggplot(data = data, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = datos, aes(x = anio, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = datos, aes(x = TIEMPO, y = GASTO_PUBLICO)) +
geom_line(color = "", size = 1.2) +    # Línea azul
geom_point(color = "", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# LINEA DE TIEMPO ---------------------------------------------------------
ggplot(data = datos, aes(x = TIEMPO, y = GASTO_PUBLICO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = REMESAS)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
data$Año <- as.character(TIEMPO)
datos$TIEMPO <- as.character(TIEMPO)
datos$TIEMPO <- as.character(TIEMPO)
datos$TIEMPO <- as.character(TIEMPO)
datos$TIEMPO <- as.character(TIEMPO)
datos <- as.character(TIEMPO)
datos <- as.character(datos$TIEMPO)
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIA.xlsx")
# Gráfico de la Etapa 1: Remesas vs Consumo
plot(datos$REMESAS, datos$CONSUMO, main = "Remesas vs Consumo")
abline(modelo_etapa2, col = "blue")
abline(modelo_etapa2, col = "blue")
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(CONSUMO ~ REMESAS, data = datos)
# Extraer los valores ajustados (consumo estimado a partir de remesas)
datos$consumo_ajustado <- modelo_etapa1$fitted.values
# Etapa 2: Ajustar el modelo de regresión para el PIB usando el consumo ajustado
modelo_etapa2 <- lm(PIB ~ consumo_ajustado, data = datos)
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las CONSUMO_AJUSTADO en el PIB", x = "PIB", y = "CONSUMO_AJUSTADO")
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Etapa 2: Ajustar el modelo de regresión para el PIB usando el consumo ajustado
modelo_etapa2 <- lm(PIB ~ consumo_ajustado, data = datos)
summary(modelo_etapa2)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
EXPORTA_NETAS <- data$EXPORTACIONES-data$IMPORTACIONES
EXPORTA_NETAS <- data$EXPORTACIONES-data$IMPORTACIONES
EXPORTA_NETAS <- datos$EXPORTACIONES-datos$IMPORTACIONES
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
summary(modelo_indice_pib)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION, data = datos)
summary(modelo_indice_pib)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETA, data = datos)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
summary(modelo_indice_pib)
mean(datos$REMESAS)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
summary(modelo_indice_pib)
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIA.xlsx")
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
}
datos <- read_excel("C:/Users/USER/Documents/REMESAS_PIB/data/amplia/CIFRAS_PROJECT_AMPLIA.xlsx")
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(CONSUMO ~ REMESAS, data = datos)
# Extraer los valores ajustados (consumo estimado a partir de remesas)
datos$consumo_ajustado <- modelo_etapa1$fitted.values
EXPORTA_NETAS <- datos$EXPORTACIONES-datos$IMPORTACIONES
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
summary(modelo_indice_pib)
# Visualización de la relación
# Visualización de la relación entre REMESAS y CONSUMO
ggplot(datos, aes(x = CONSUMO, y = REMESAS)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las REMESAS en el CONSUMO", x = "Remesas", y = "Consumo")
# Visualización de la relación entre CONSUMO_AJUSTADO y PIB
ggplot(datos, aes(x = consumo_ajustado, y = PIB)) +
geom_point() +
geom_smooth(method = "lm", col = "blue") +
labs(title = "Impacto de las CONSUMO_AJUSTADO en el PIB", x = "PIB", y = "CONSUMO_AJUSTADO")
# Opción 2
# Crear tabla para los modelos y exportarla a Word
tab_model(modelo_etapa1, modelo_indice_pib,
title = "Resultados de las Regresiones",
dv.labels = c("Consumo Ajustado", "PIB"),
show.ci = FALSE,
show.se = TRUE,  # Muestra errores estándar
file = "resultados_regresion2.doc")  # Exporta a Word
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",  # Cambiar a "html" o "latex" si es necesario
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",  # Cambiar a "html" o "latex" si es necesario
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.docx")  # Cambiar extensión según formato
# Regresión en dos etapas -------------------------------------------------
# Etapa 1: Ajustar el modelo de regresión para consumo
modelo_etapa1 <- lm(CONSUMO ~ REMESAS, data = datos)
modelo_indice_pib <- lm(PIB ~ consumo_ajustado + GASTO_PUBLICO + INVERSION + EXPORTA_NETAS, data = datos)
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",  # Cambiar a "html" o "latex" si es necesario
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.docx")  # Cambiar extensión según formato
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",  # Cambiar a "html" o "latex" si es necesario
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# Opción 2
# Crear tabla para los modelos y exportarla a Word
tab_model(modelo_etapa1, modelo_indice_pib,
title = "Resultados de las Regresiones",
dv.labels = c("Consumo", "PIB"),
show.ci = FALSE,
show.se = TRUE,  # Muestra errores estándar
file = "resultados_regresion2.doc")  # Exporta a Word
# Opción 2
modelsummary(list("Etapa 1: Consumo" = modelo_etapa1,
"Etapa 2: PIB" = modelo_indice_pib),
output = "resultados_regresio3.docx")
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.doc")  # Cambiar extensión según formato
# EXPORTAR DATOS ----------------------------------------------------------
# Exportar los resultados en formato Word
# Opción 1
# Exportar modelo a LaTeX, HTML o texto
stargazer(modelo_etapa1, modelo_indice_pib,
type = "text",
title = "Resultados de las Regresiones en Dos Etapas",
align = TRUE,
dep.var.labels = c("Consumo Ajustado", "PIB"),
covariate.labels = c("Remesas", "Consumo Ajustado"),
out = "resultados_regresion1.html")  # Cambiar extensión según formato
# Opción 2
# Crear tabla para los modelos y exportarla a Word
tab_model(modelo_etapa1, modelo_indice_pib,
title = "Resultados de las Regresiones",
dv.labels = c("Consumo", "PIB"),
show.ci = FALSE,
show.se = TRUE,  # Muestra errores estándar
file = "resultados_regresion2.doc")  # Exporta a Word
# GRAFICAS POR CASOS ------------------------------------------------------
# MATRIZ DE CORRELACION ---------------------------------------------------
# Creación de base de variables para matriz de correlacion
Bs_correlacion<-data.frame(PIB=data$PIB,
CONSUMO=data$CONSUMO,
REMESAS=data$REMESAS,
INVERSION=data$INVERSION,
EXPORTACIONES=data$EXPORTACIONES,
IMPORTACIONES=data$IMPORTACIONES,
GASTO_PUBLICO=data$GASTO_PUBLICO)
Matriz_Correl<-cor(Bs_correlacion)
cor_melt <- melt(Matriz_Correl)
ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
labs(title = "Matriz de Correlación", x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(Matriz_Correl)
ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
labs(title = "Matriz de Correlación", x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
Matriz_Correl<-cor(Bs_correlacion)
# GRAFICAS POR CASOS ------------------------------------------------------
# MATRIZ DE CORRELACION ---------------------------------------------------
# Creación de base de variables para matriz de correlacion
Bs_correlacion<-data.frame(PIB=data$PIB,
CONSUMO=data$CONSUMO,
REMESAS=data$REMESAS,
INVERSION=data$INVERSION,
EXPORTACIONES=data$EXPORTACIONES,
IMPORTACIONES=data$IMPORTACIONES,
GASTO_PUBLICO=data$GASTO_PUBLICO)
# GRAFICAS POR CASOS ------------------------------------------------------
# MATRIZ DE CORRELACION ---------------------------------------------------
# Creación de base de variables para matriz de correlacion
Bs_correlacion<-data.frame(PIB=datos$PIB,
CONSUMO=datos$CONSUMO,
REMESAS=datos$REMESAS,
INVERSION=datos$INVERSION,
EXPORTACIONES=datos$EXPORTACIONES,
IMPORTACIONES=datos$IMPORTACIONES,
GASTO_PUBLICO=datos$GASTO_PUBLICO)
Matriz_Correl<-cor(Bs_correlacion)
cor_melt <- melt(Matriz_Correl)
ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
labs(title = "Matriz de Correlación", x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(Matriz_Correl)
#Grafico de matriz de correlacion
corrplot(Matriz_Correl)
?corrplot()
corrplot(
Matriz_Correl,
method = c("circle", "square", "ellipse", "number", "shade", "color", "pie"),
type = c("full", "lower", "upper"),
col = NULL,
col.lim = NULL,
is.corr = TRUE,
bg = "white",
title = "",
add = FALSE,
diag = TRUE,
outline = FALSE,
mar = c(0, 0, 0, 0),
addgrid.col = NULL,
addCoef.col = NULL,
addCoefasPercent = FALSE,
order = c("original", "AOE", "FPC", "hclust", "alphabet"),
hclust.method = c("complete", "ward", "ward.D", "ward.D2", "single", "average",
"mcquitty", "median", "centroid"),
addrect = NULL,
rect.col = "black",
rect.lwd = 2,
tl.pos = NULL,
tl.cex = 1,
tl.col = "red",
tl.offset = 0.4,
tl.srt = 90,
cl.pos = NULL,
cl.length = NULL,
cl.cex = 0.8,
cl.ratio = 0.15,
cl.align.text = "c",
cl.offset = 0.5,
number.cex = 1,
number.font = 2,
number.digits = NULL,
addshade = c("negative", "positive", "all"),
shade.lwd = 1,
shade.col = "white",
transKeepSign = TRUE,
p.mat = NULL,
sig.level = 0.05,
insig = c("pch", "p-value", "blank", "n", "label_sig"),
pch = 4,
pch.col = "black",
pch.cex = 3,
plotCI = c("n", "square", "circle", "rect"),
lowCI.mat = NULL,
uppCI.mat = NULL,
na.label = "?",
na.label.col = "black",
win.asp = 1,
...
)
corrplot(
Matriz_Correl,
method = c("circle", "square", "ellipse", "number", "shade", "color", "pie"),
type = c("full", "lower", "upper"),
col = NULL,
col.lim = NULL,
is.corr = TRUE,
bg = "white",
title = "",
add = FALSE,
diag = TRUE,
outline = FALSE,
mar = c(0, 0, 0, 0),
addgrid.col = NULL,
addCoef.col = NULL,
addCoefasPercent = FALSE,
order = c("original", "AOE", "FPC", "hclust", "alphabet"),
hclust.method = c("complete", "ward", "ward.D", "ward.D2", "single", "average",
"mcquitty", "median", "centroid"),
addrect = NULL,
rect.col = "black",
rect.lwd = 2,
tl.pos = NULL,
tl.cex = 1,
tl.col = "red",
tl.offset = 0.4,
tl.srt = 90,
cl.pos = NULL,
cl.length = NULL,
cl.cex = 0.8,
cl.ratio = 0.15,
cl.align.text = "c",
cl.offset = 0.5,
number.cex = 1,
number.font = 2,
number.digits = NULL,
addshade = c("negative", "positive", "all"),
shade.lwd = 1,
shade.col = "white",
transKeepSign = TRUE,
p.mat = NULL,
sig.level = 0.05,
insig = c("pch", "p-value", "blank", "n", "label_sig"),
pch = 4,
pch.col = "black",
pch.cex = 3,
plotCI = c("n", "square", "circle", "rect"),
lowCI.mat = NULL,
uppCI.mat = NULL,
na.label = "?",
na.label.col = "black",
win.asp = 1)
corrplot.mixed(Matriz_Correl)
plot(Matriz_Correl)
#Grafico de matriz de correlacion
corrplot(Matriz_Correl)
print(Matriz_Correl)
ggplot(cor_melt, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0, limit = c(-1, 1)) +
theme_minimal() +
labs(title = "Matriz de Correlación", x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
