library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
# Tratamiento para variable de exportaciones netas
datos$EXPORTA_NETAS <- datos$EXPORTACIONES-datos$IMPORTACIONES
min_exporta_neta <- min(datos$EXPORTA_NETAS)
shift_value <- abs(min_exporta_neta) + 1  # Añadir 1 para evitar log(0)
min_inflacion <- min(datos$INFLACION)
shift_valueinf <- abs(min_inflacion) + 1  # Añadir 1 para evitar log(0)
datos$log_CONSUMO <- log(datos$CONSUMO)
datos$log_REMESAS <- log(datos$REMESAS)
datos$log_PIB <- log(datos$PIB)
datos$log_GASTO_PUBLICO <- log(datos$GASTO_PUBLICO)
datos$log_INVERSION <- log(datos$INVERSION)
datos$log_EXPORTA_NETAS <- log(datos$EXPORTA_NETAS + shift_value)
datos$log_INFLACION <- log(datos$INFLACION+ shift_valueinf)
datos$log_INGRESO_PER_CAPITA <- log(datos$INGRESO_PER_CAPITA)
Export(datos, "datos.csv", keep.row.names="occupation")
Export(datos, "datos.csv", keep.row.names="occupation")
# Linea de tiempo para el gasto público
# Detectar caídas en log_REMESAS, log_PIB y log_CONSUMO
datos <- datos %>%
mutate(
caida_REMESAS = log_REMESAS < lag(log_REMESAS),
caida_PIB = log_PIB < lag(log_PIB),
caida_CONSUMO = log_CONSUMO < lag(log_CONSUMO)
)
recesion <- datos %>%
filter(caida_REMESAS | caida_PIB | caida_CONSUMO) %>%
mutate(end = lead(TIEMPO)) %>%
select(TIEMPO, end) %>%
rename(start = TIEMPO) %>%
na.omit()
# Crear gráfico con líneas evolutivas y áreas sombreadas para recesiones
ggplot(datos, aes(x = TIEMPO)) +
# Sombreados de recesión
geom_rect(data = recesion, aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf),
fill = "grey80", alpha = 0.5) +
# Líneas de evolución de las variables
geom_line(aes(y = log_REMESAS, color = "log_REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "log_PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "log_CONSUMO"), size = 1.2) +
labs(title = "Evolución de log_REMESAS, log_PIB y log_CONSUMO con períodos de recesión",
x = "Año",
y = "Logaritmo de valores") +
scale_color_manual(values = c("log_REMESAS" = "blue", "log_PIB" = "green", "log_CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
View(datos)
# Crear gráfico con líneas evolutivas y áreas sombreadas para recesiones
ggplot(datos, aes(x = TIEMPO)) +
# Sombreados de recesión
geom_rect(data = recesion, aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf),
fill = "grey80", alpha = 0.5) +
# Líneas de evolución de las variables
geom_line(aes(y = log_REMESAS, color = "log_REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "log_PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "log_CONSUMO"), size = 1.2) +
labs(title = "Evolución de log_REMESAS, log_PIB y log_CONSUMO con períodos de recesión",
x = "Año",
y = "Logaritmo de valores") +
scale_color_manual(values = c("log_REMESAS" = "blue", "log_PIB" = "green", "log_CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
View(datos)
# Crear gráfico con líneas evolutivas y áreas sombreadas para recesiones
ggplot(datos, aes(x = TIEMPO)) +
# Sombreados de recesión
geom_rect(data = recesion, aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf),
fill = "grey80", alpha = 0.5, inherit.aes = FALSE) +
# Líneas de evolución de las variables
geom_line(aes(y = log_REMESAS, color = "log_REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "log_PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "log_CONSUMO"), size = 1.2) +
labs(title = "Evolución de log_REMESAS, log_PIB y log_CONSUMO con períodos de recesión",
x = "Año",
y = "Logaritmo de valores") +
scale_color_manual(values = c("log_REMESAS" = "blue", "log_PIB" = "green", "log_CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
# Crear gráfico para log_REMESAS
ggplot(datos, aes(x = TIEMPO)) +
geom_rect(data = recesion %>% filter(start %in% datos$TIEMPO),
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf),
fill = "grey80", alpha = 0.5, inherit.aes = FALSE) +
geom_line(aes(y = log_REMESAS), color = "blue", size = 1.2) +
labs(title = "Evolución de log_REMESAS con períodos de recesión",
x = "Año",
y = "log_REMESAS") +
theme_minimal()
# Crear gráfico para log_CONSUMO
ggplot(datos, aes(x = TIEMPO)) +
geom_rect(data = recesion %>% filter(start %in% datos$TIEMPO),
aes(xmin = start, xmax = end, ymin = -Inf, ymax = Inf),
fill = "grey80", alpha = 0.5, inherit.aes = FALSE) +
geom_line(aes(y = log_CONSUMO), color = "red", size = 1.2) +
labs(title = "Evolución de log_CONSUMO con períodos de recesión",
x = "Año",
y = "log_CONSUMO") +
theme_minimal()
View(datos)
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(datos, column_name, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
}
# Graficar cada variable individualmente
plot_series_with_shading(data, "log_CONSUMO", "Consumo (log)")
plot_series_with_shading(data, "log_REMESAS", "Remesas (log)")
plot_series_with_shading(data, "log_PIB", "PIB (log)")
datos <- datos %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(datos, column_name, title) {
datos <- datos %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
}
datos <- datos %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
datos <- datos %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
datos = datos %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(data = datos %>% filter(Decline == TRUE),
aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
library(tidyverse)
# Crear el DataFrame
data <- tibble(
TIEMPO = as.Date(c("2010-01-01", "2011-01-01", "2012-01-01", "2013-01-01",
"2014-01-01", "2015-01-01", "2016-01-01", "2017-01-01",
"2018-01-01", "2019-01-01", "2020-01-01", "2021-01-01",
"2022-01-01")),
log_CONSUMO = c(17.7876808, 17.8402926, 17.87577446, 17.92665307, 17.96139759,
18.00130229, 17.94121179, 18.00740928, 18.02797915, 18.04906487,
17.93688352, 18.04433727, 18.11542216),
log_REMESAS = c(14.7677414, 14.79849892, 14.71847028, 14.71140151, 14.71637985,
14.68169419, 14.77177735, 14.85937751, 14.92426341, 14.9894309,
15.02082093, 15.28852946, 15.37229328),
log_PIB = c(18.18148055, 18.2628898, 18.31911145, 18.38874232, 18.43013438,
18.43133058, 18.42442726, 18.48241688, 18.49280567, 18.49445835,
18.39745067, 18.49110874, 18.55113214)
)
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
plot_series_with_shading(datos, "log_REMESAS", "Remesas (log)")
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(data = datos %>% filter(Decline == TRUE),
aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(datos, log_REMESAS, title) {
datos <- datos %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(data = datos %>% filter(Decline == TRUE),
aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
}
ggplot(datos, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(data = datos %>% filter(Decline == TRUE),
aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
ggplot(datos, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(data = datos %>% filter(Decline == TRUE),
aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
library(tidyverse)
# Crear el DataFrame
data <- tibble(
TIEMPO = as.Date(c("2010-01-01", "2011-01-01", "2012-01-01", "2013-01-01",
"2014-01-01", "2015-01-01", "2016-01-01", "2017-01-01",
"2018-01-01", "2019-01-01", "2020-01-01", "2021-01-01",
"2022-01-01")),
log_CONSUMO = c(17.7876808, 17.8402926, 17.87577446, 17.92665307, 17.96139759,
18.00130229, 17.94121179, 18.00740928, 18.02797915, 18.04906487,
17.93688352, 18.04433727, 18.11542216),
log_REMESAS = c(14.7677414, 14.79849892, 14.71847028, 14.71140151, 14.71637985,
14.68169419, 14.77177735, 14.85937751, 14.92426341, 14.9894309,
15.02082093, 15.28852946, 15.37229328),
log_PIB = c(18.18148055, 18.2628898, 18.31911145, 18.38874232, 18.43013438,
18.43133058, 18.42442726, 18.48241688, 18.49280567, 18.49445835,
18.39745067, 18.49110874, 18.55113214)
)
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
}
ggplot(data, aes(x = TIEMPO, y = !!sym(column_name))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(column_name)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = column_name) +
theme_minimal()
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
data <- data %>%
mutate(Decline = lag(!!sym(column_name)) > !!sym(column_name)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
# Función para graficar y sombrear periodos de disminución
plot_series_with_shading <- function(data, log_REMESAS, title) {
data <- data %>%
mutate(Decline = lag(!!sym(log_REMESAS)) > !!sym(log_REMESAS)) # Identificar periodos de disminución
ggplot(data, aes(x = TIEMPO, y = !!sym(log_REMESAS))) +
geom_line(color = "steelblue") +
geom_point(color = "steelblue") +
geom_ribbon(aes(ymin = -Inf, ymax = !!sym(log_REMESAS)),
fill = "red", alpha = 0.2,
data = data %>% filter(Decline == TRUE)) +
labs(title = title, x = "Tiempo", y = log_REMESAS) +
theme_minimal()
}
# Graficar cada variable individualmente
plot_series_with_shading(data, "log_CONSUMO", "Consumo (log)")
plot_series_with_shading(data, "log_REMESAS", "Remesas (log)")
plot_series_with_shading(data, "log_PIB", "PIB (log)")
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_PIB)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# Linea de tiempo para las REMESAS
ggplot(data = datos, aes(x = TIEMPO, y = log_REMESAS)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución de las remesas",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "brown", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "yellow", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
# LINEA DE TIEMPO ---------------------------------------------------------
{
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
}# Gráfico para el Connsumo
# Data --------------------------------------------------------------------
{
# Librería
library(readxl)
library(tidyverse)
library(lubridate)
library(scales)
library(tidyverse)
library(ggplot2)
library(fdth)
library(knitr)
library(dplyr)
library(fdth)
library(e1071)
library(haven)
library(corrplot)
library(reshape2)
library(modelsummary)
library(pandoc)
library(stargazer)
library(devtools)
library(usethis)
library(sjPlot)
library(zoo)
library(car)
library(lmtest)
}
# LINEA DE TIEMPO ---------------------------------------------------------
{
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Gasto Público",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
}# Gráfico para el Connsumo
View(datos)
ggplot(data = datos, aes(x = TIEMPO, y = log_CONSUMO)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del Consumo",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(data = datos, aes(x = TIEMPO, y = log_PIB)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución del PIB",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
# Linea de tiempo para las REMESAS
ggplot(data = datos, aes(x = TIEMPO, y = log_REMESAS)) +
geom_line(color = "blue", size = 1.2) +    # Línea azul
geom_point(color = "red", size = 3) +      # Puntos rojos
labs(title = "Evolución de las remesas",
x = "Año",
y = "Gasto Público (en millones)") +
theme_minimal() +                          # Tema visual minimalista
theme()
ggplot(datos, aes(x = TIEMPO)) +
geom_line(aes(y = log_REMESAS, color = "REMESAS"), size = 1.2) +
geom_line(aes(y = log_PIB, color = "PIB"), size = 1.2) +
geom_line(aes(y = log_CONSUMO, color = "CONSUMO"), size = 1.2) +
labs(title = "Evolución de REMESAS, PIB y CONSUMO a lo largo del tiempo",
x = "Año",
y = "Valor") +
scale_color_manual(values = c("REMESAS" = "blue", "PIB" = "yellow", "CONSUMO" = "red"),
name = "Variable") +
theme_minimal()
# Cargar librerías necesarias
library(knitr)
library(kableExtra)
# Definir los datos de la tabla
data <- data.frame(
Variable = c("Remesas", "Consumo Ajustado", "log_INGRESO_PER_CAPITA", "log(consumo_ajustado)", "log_GASTO_PUBLICO","log_INVERSION", "log_EXPORTA_NETAS" , "Constante"),
`Consumo Ajustado` = c("0.209***", "-0.015", "1.068***","", "", "", "", "5.576***"),
`Error Consumo Ajustado` = c("(0.034)", "(0.011)", "(0.114)","", "", "", "", "(1.077)"),
PIB = c("", "", "", "0.725***", "0.291***", "0.004", "0.001*", "0.504"),
`Error PIB` = c("", "", "", "(0.038)", "(0.024)", "(0.008)", "(0.0004)", "(0.406)")
)
# Crear la tabla con kable y aplicar formato
kbl(data, align = "c", col.names = c("Variable", "Consumo Ajustado", "(Error Estándar)", "PIB", "(Error Estándar)")) %>%
kable_classic(full_width = F) %>%
add_header_above(c(" " = 1, "Dependent variable" = 4)) %>%
add_header_above(c("Resultado de las regresiones de dos etapas" = 5)) %>%
add_footnote(c("Observaciones: 13",
"R²: 0.950 (Consumo Ajustado), 0.998 (PIB)",
"R² Ajustado: 0.933	 (Consumo Ajustado), 0.997 (PIB)",
"Error Estándar Residual: 0.024 (df = 9), 0.006 (df = 8)",
"Estadístico F: 56.649*** (df = 3; 9), 940.193*** (df = 4; 8)",
"Nota: *p<0.1; **p<0.05; ***p<0.01"))
print(
kbl(data, align = "c", col.names = c("Variable", "Consumo Ajustado", "(Error Estándar)", "PIB", "(Error Estándar)")) %>%
kable_classic(full_width = F) %>%
add_header_above(c(" " = 1, "Dependent variable" = 4)) %>%
add_header_above(c("Resultado de las regresiones de dos etapas" = 5)) %>%
add_footnote(c("Observaciones: 13",
"R²: 0.950 (Consumo Ajustado), 0.998 (PIB)",
"R² Ajustado: 0.933	 (Consumo Ajustado), 0.997 (PIB)",
"Error Estándar Residual: 0.024 (df = 9), 0.006 (df = 8)",
"Estadístico F: 56.649*** (df = 3; 9), 940.193*** (df = 4; 8)",
"Nota: *p<0.1; **p<0.05; ***p<0.01"))
)
## Resultados de las regresiones
```{r Resultado de las regresiones, echo=FALSE, message=TRUE, warning=TRUE, paged.print=TRUE}
print(table_result)
